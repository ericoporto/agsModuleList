# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  branches:
    include:
      - refs/heads/*
      - refs/tags/*

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-18.04'

pool:
  vmImage: $(imageName)

steps:
- bash: |
    pushd agsget
    dotnet build --runtime linux-x64
    dotnet build --runtime osx-x64
    dotnet build --runtime win-x64
    dotnet build --runtime win-x86
    dotnet publish -r win-x86
    dotnet publish -r win-x64
    dotnet publish -r linux-x64
    dotnet publish -r osx-x64
    popd
  displayName: 'build'

- bash: |
    mkdir agsget/build
    cp agsget/agsget/bin/Debug/netcoreapp3.1/osx-x64/publish/agsget build/agsget-osx64
    cp agsget/agsget/bin/Debug/netcoreapp3.1/linux-x64/publish/agsget build/agsget
    cp agsget/agsget/bin/Debug/netcoreapp3.1/win-x64/publish/agsget.exe build/agsget.exe
    cp agsget/agsget/bin/Debug/netcoreapp3.1/win-x86/publish/agsget.exe build/agsget-x86.exe
  displayName: 'collect builds'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)/agsget/build/'
    contents: 'agsconfig-Linux'
    targetFolder: $(Build.ArtifactStagingDirectory)

- bash: |
    echo "##vso[task.setvariable variable=tagname]$(git describe --tags $(git rev-list --tags --max-count=1))"
# Upload to Github Release
- task: GithubRelease@0
  displayName: 'Create GitHub Release'
  inputs:
    tagSource: 'auto'
    tag: $(tagname)
    assetUploadMode: 'replace'
    action: 'edit'
    gitHubConnection: agsget
    repositoryName: ericoporto/agsmoduleslist
    assets: |
         $(Build.ArtifactStagingDirectory)/agsge*

